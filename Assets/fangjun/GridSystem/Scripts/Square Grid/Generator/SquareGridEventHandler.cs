using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using GridSystem;

/// <summary>
/// The event handler of various of grid event
/// stores the selected grid GameObject
/// can be used to find the Vertex in the GridSystem
/// </summary>
public class SquareGridEventHandler : MonoBehaviour, IGridEventHandler
{
    #region Singleton

    /// <summary>
    /// The singleton of SquareGridEventHandler
    /// initialize when generated by the SquareGridGenerator
    /// </summary>
    public static SquareGridEventHandler Instance;

    #endregion
    
    #region Private Field

    /// <summary>
    /// The GridElement the cursor is pointing
    /// </summary>
    [SerializeField]
    private GameObject _currentGridObject;
    
    /// <summary>
    /// The event triggered when currentGridObject changes
    /// </summary>
    private Action _updateSelectedGrid;

    #endregion
    
    #region Public Field

    /// <summary>
    /// The GridElement the cursor is pointing
    /// </summary>
    public GameObject currentGridObject
    {
        get
        {
            return _currentGridObject;
        }
        set
        {
            _currentGridObject = value;
            // invoke updateGrid event
            _updateSelectedGrid?.Invoke();
        }
    }

    
    /// <summary>
    /// The event triggered when currentGridObject changes
    /// </summary>
    public Action updateSelectedGrid
    {
        get
        {
            return _updateSelectedGrid;
        }
        set
        {
            _updateSelectedGrid = value;
        }
    }

    /// <summary>
    /// The max length of the detect ray
    /// </summary>
    public float maxRayLength;

    #endregion

    private void Awake()
    {
        Instance = this;
    }

    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
    }

    #region Private Methods

    /// <summary>
    /// Generate the RayCast
    /// if hit an GameObject with tag Grid
    /// set current GridObject to that GameObject
    /// </summary>
    private void GetGridRayCast()
    {
        Vector2 mousePos = Input.mousePosition;
        Ray ray = MainCamTracker.mainCamera.ScreenPointToRay(mousePos);
        
        Debug.DrawLine(MainCamTracker.mainCamera.gameObject.transform.position, 
            MainCamTracker.mainCamera.gameObject.transform.position + ray.direction * maxRayLength, Color.green);
        
        RaycastHit hit;
        // get all the raycast hit in layer 8
        // layer 8 is the Grid layer
        if (Physics.Raycast(ray, out hit, maxRayLength, 8))
        {
            _currentGridObject = hit.collider.gameObject;
        }
    }

    #endregion
}
